from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from config import bot
from aiogram.types import *

dp = Dispatcher(bot)
record = True  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –Ω–∞–±–æ—Ä–µ(–∏–¥–µ—Ç –∏–ª–∏ –Ω–µ—Ç)


@dp.message_handler(commands='start')
async def start_command(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param message:
    :return: None
    """

    await message.answer('–ü—Ä–∏–≤–µ—Ç üëã. –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ Banana Crypto. '
                         '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö. '
                         '–ù–∞–∂–∏–º–∞–π "–ù–∞—á–∞—Ç—å" –∏ –Ω–∞—á–Ω–µ–º –æ–±—â–µ–Ω–∏–µ.', reply_markup=
                         InlineKeyboardMarkup(row_width=1).add(
                             *[InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å!", callback_data="WELCOME")]))


@dp.callback_query_handler(text="WELCOME")
async def welcome_func(query: CallbackQuery) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
    :param query:
    :return:
    """
    await query.message.answer('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç Banana Crypto! –í—ã–±–µ—Ä–∏ –Ω–∏–∂–µ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="FAQ"),
                                   InlineKeyboardButton(text="–û –ø—Ä–æ–µ–∫—Ç–µ", callback_data="DESCRIPTION"),
                                   InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="MARKET")
                               ])
                               )


@dp.callback_query_handler(text="FAQ")
async def faq_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–û –ø—Ä–æ–µ–∫—Ç–µ", callback_data="DESCRIPTION"),
                                   InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="MARKET")
                               ])
                               )


@dp.callback_query_handler(text="DESCRIPTION")
async def description_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('Banana Crypto - —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –æ –∑–∞—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö –æ—Ç '
                               '–î–∏–Ω–∞—Ä–∞ –§–∞—Å—Ö—É—Ç–¥–∏–Ω–æ–≤–∞.–ù–∞—à–∞ —Ü–µ–ª—å: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–µ —Å–∏–ª—å–Ω–æ–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ–º—å—é–Ω–∏—Ç–∏ –Ω–∞ '
                               '—Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–º —Ä—ã–Ω–∫–µ. –ß–µ—Ä–µ–∑ –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 700 —É—á–µ–Ω–∏–∫–æ–≤ –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–æ '
                               '—Å–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∫—Ä–∏–ø—Ç–æ-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤. –ù–∏–∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—á–∞—Å—Ç–∏–µ–º –Ω–∞—à–µ–º '
                               '–Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ –∏/–∏–ª–∏ –∫–æ–º—å—é–Ω–∏—Ç–∏.',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–û –∫–æ–º—å—é–Ω–∏—Ç–∏", callback_data="COMMUNITY"),
                                   InlineKeyboardButton(text="–û –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ", callback_data="MENTORING"),
                                   InlineKeyboardButton(text="–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞", callback_data="SOCIAL_NET"),
                                   InlineKeyboardButton(text="–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞", callback_data="WEBSITE")
                               ])
                               )


@dp.callback_query_handler(text="SOCIAL_NET")
async def social_net_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–ò–Ω—Å—Ç–∞–≥—Ä–∞–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—Ä–æ–µ–∫—Ç–∞:  Instagram.com/dinar_banana')


@dp.callback_query_handler(text="MENTORING")
async def metorinf_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ Banana Crypto - —ç—Ç–æ 3-—Ö –º–µ—Å—è—á–Ω–∞—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, '
                               '–ø–æ –æ—Å–≤–æ–µ–Ω–∏—é –Ω–∞–≤—ã–∫–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ —Å –ø–æ–º–æ—â—å—é –æ–ø—ã—Ç–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤.',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞", callback_data="WEBSITE"),
                                   InlineKeyboardButton(text="–ò–Ω—Ç–µ—Ä–≤—å—é —Å —É—á–µ–Ω–∏–∫–∞–º–∏", callback_data="INTERVIEW"),
                                   InlineKeyboardButton(text="–û—Ç–∑—ã–≤—ã", callback_data="REVIEWS"),
                                   InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫", callback_data="RECORD")
                               ])
                               )


@dp.callback_query_handler(text="RECORD")
async def record_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    if record:
        await query.message.answer('–ù–∞–±–æ—Ä –Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞ —É–∂–µ –≤ —Å–∞–º–æ–º —Ä–∞–∑–≥–∞—Ä–µ! –ù–∞–∂–∏–º–∞–π –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –∏ '
                                   '–Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç —Å –≤—ã–±–æ—Ä–æ–º —Ç–∞—Ä–∏—Ñ–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞—è–≤–∫–∏',
                                   reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                       InlineKeyboardButton(text="–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="CONNECTION")
                                   ])
                                   )
    else:
        await query.message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞–±–æ—Ä–∞ —Å–µ–π—á–∞—Å –Ω–µ—Ç. –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–∞—Å—Ç—å –≤ –ø—Ä–µ–¥–∑–∞–ø–∏—Å—å '
                                   '—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://bananacrypto.ru/ –ú—ã —É–≤–µ–¥–æ–º–ª—è–µ–º '
                                   '—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏ –æ –±–ª–∏–∂–∞–π—à–µ–º —Å—Ç–∞—Ä—Ç–µ –Ω–∞–±–æ—Ä–∞ –∏ –¥–∞–µ–º –ª—É—á—à–∏–µ '
                                   '—É—Å–ª–æ–≤–∏—è –¥–ª—è —É—á–∞—Å—Ç–∏—è.')


@dp.callback_query_handler(text="INTERVIEW")
async def interview_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–ú—ã –≤–∑—è–ª–∏ –∏–Ω—Ç–µ—Ä–≤—å—é —É –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –¥–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É: '
                               'https://www.youtube.com/channel/UC0L0P92d6EOjvsOqBabUkHQ')


@dp.callback_query_handler(text="WEBSITE")
async def website_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –Ω–∞—à–∏–º —Å–∞–π—Ç–æ–º: https://bananacrypto.ru/')


@dp.callback_query_handler(text="MARKET")
async def market_func(query: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏.
    :param query:
    :return: None
    Attributes:
        keyboard(InlineKeyboardMarkup): –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑ –±–¥ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lvl = 2
    if lvl == 1:
        keyboard = InlineKeyboardMarkup(row_width=1).add(*[
            InlineKeyboardButton(text="–û –∫–æ–º—å—é–Ω–∏—Ç–∏", callback_data="COMMUNITY"),
            InlineKeyboardButton(text="–û –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ", callback_data="MENTORING")
        ])
    else:
        keyboard = InlineKeyboardMarkup(row_width=1).add(*[
            InlineKeyboardButton(text="–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏", callback_data="JOIN_COMMUNITY"),
            InlineKeyboardButton(text="–û –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ", callback_data="MENTORING")
        ])

    await query.message.answer('–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. '
                               '–ö–æ–º—å—é–Ω–∏—Ç–∏ - —ç—Ç–æ –¥–æ—Å—Ç—É–ø –≤ –Ω–∞—à–µ –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å '
                               '–µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π. –î–æ—Å—Ç—É–ø –≤ –Ω–µ–≥–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è '
                               '–∑–Ω–∞–Ω–∏–π. –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ - –æ—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –æ—Å–≤–æ–µ–Ω–∏—é '
                               '–Ω–∞–≤—ã–∫–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ.',
                               reply_markup=keyboard
                               )


@dp.callback_query_handler(text="JOIN_COMMUNITY")
async def join_community_func(query: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏.
    :param query:
    :return: None
    """
    await query.message.answer('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="1 –º–µ—Å—è—Ü - 100$", callback_data="PAYMENT"),
                                   InlineKeyboardButton(text="2 –º–µ—Å—è—Ü–∞ - 180$", callback_data="PAYMENT"),
                                   InlineKeyboardButton(text="3 –º–µ—Å—è—Ü–∞ - 240$", callback_data="PAYMENT"),
                               ])
                               )


@dp.callback_query_handler(text="PAYMENT")
async def payment_func(query: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã
    :param query:
    :return:
    """
    pass


@dp.callback_query_handler(text="COMMUNITY")
async def test_func(query: CallbackQuery) -> None:
    """

    :param query:
    :return:
    """
    await query.message.answer('–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å '
                               '–∑–Ω–∞–Ω–∏–π –≤ –∫—Ä–∏–ø—Ç–æ-—Å—Ñ–µ—Ä–µ. –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –±–æ—Ç-–æ–ø—Ä–æ—Å–Ω–∏–∫, –ø—Ä–æ—Ö–æ–¥–∏ —Ç–µ—Å—Ç. –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π '
                               '—Å–¥–∞—á–µ –∑–¥–µ—Å—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é.',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data="TEST")
                               ])
                               )


@dp.callback_query_handler(text="TEST")
async def test_func(query: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–æ–º –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è —É—Ä–æ–≤–Ω—è
    :param query:
    :return:
    """
    await query.message.answer('–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: @testiruem_stud_bot')


@dp.callback_query_handler(text="CONGRATULATIONS")
async def congratulations_func(query: CallbackQuery):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –±—ã–ª –ø–æ–≤—ã—à–µ–Ω
    :param query:
    :return:
    """
    await query.message.answer('–û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å–æ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º —Ç–µ—Å—Ç–æ–º. '
                               '–•–æ—Ä–æ—à–µ–≥–æ –∫—Ä–∏–ø—Ç–∞–Ω–∞ –≤–∏–¥–Ω–æ –∏–∑ –¥–∞–ª–µ–∫–∞. –î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑... 1... 2... 3...',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="LVL_UP")
                               ])
                               )


@dp.callback_query_handler(text="LVL_UP")
async def lvl_up_func(query: CallbackQuery):
    """
    –ü–æ–≤—ã—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–æ–≤–æ–µ –º–µ–Ω—é.
    :param query:
    :return:
    """
    # –ø–æ–≤—ã—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    await query.message.answer('–£—Ä–∞! –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é. –ù–∏–∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å ',
                               reply_markup=InlineKeyboardMarkup(row_width=3).add(*[
                                   InlineKeyboardButton(text="–û –ø—Ä–æ–µ–∫—Ç–µ", callback_data="DESCRIPTION"),
                                   InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å", callback_data="PROFILE"),
                                   InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∫–∞", callback_data="SUBSCRIPTION"),
                                   InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="MARKET"),
                                   InlineKeyboardButton(text="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data="REFERRAL"),
                               ])
                               )


@dp.callback_query_handler(text="SUBSCRIPTION")
async def check_sub_func(query: CallbackQuery):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ–Ω–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param query:
    :return:
    """
    await query.message.answer('–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫:\n–ü–æ–¥–ø–∏—Å–∫–∞: "–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –±–¥"\n–°—Ä–æ–∫ –¥–æ—Å—Ç—É–ø–∞: "schedule + –±–¥"',
                               reply_markup=InlineKeyboardMarkup(row_width=3).add(*[
                                   InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="DESCRIPTION"),
                                   InlineKeyboardButton(text="–ü—Ä–æ–¥–ª–∏—Ç—å", callback_data="JOIN_COMMUNITY")
                               ]))


@dp.callback_query_handler(text="REFERRAL")
async def referral_func(query: CallbackQuery):
    """

    :param query:
    :return:
    """
    # –∏–Ω—Ñ–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ
    pass


@dp.callback_query_handler(text="PROFILE")
async def check_profile_func(query: CallbackQuery):
    await query.message.answer('–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ\n–ü—Ä–æ—Ñ–∏–ª—å —Ç–≥: @.\nGoogle-–∞–∫–∫–∞—É–Ω—Ç: \nDiscord:',
                               reply_markup=InlineKeyboardMarkup(row_width=1).add(*[
                                   InlineKeyboardButton(text="–î–æ—Å—Ç—É–ø –≤ Notion", callback_data="NOTION_LINK"),
                                   InlineKeyboardButton(text="–î–æ—Å—Ç—É–ø –≤ Discord", callback_data="DISCORD_LINK"),
                                   InlineKeyboardButton(text="–î–æ—Å—Ç—É–ø –≤ —á–∞—Ç—ã/–∫–∞–Ω–∞–ª—ã", callback_data="CHAT_LINK"),
                                   InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∏–∑ —á–∞—Ç–æ–≤/–∫–Ω–∞–ª–æ–≤", callback_data="DELETE_CHAT"),
                                   InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å google", callback_data="OFF_GOOGLE"),
                                   InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å Discord", callback_data="OFF_DISCORD")
                               ])
                               )


@dp.callback_query_handler(text="NOTION_LINK")
async def notion_func(query: CallbackQuery):
    await query.message.answer('–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ Notion: "—Å—Å—ã–ª–∫–∞"')


@dp.callback_query_handler(text="DISCORD_LINK")
async def discord_func(query: CallbackQuery):
    await query.message.answer('–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ Discord: "—Å—Å—ã–ª–∫–∞"')


@dp.callback_query_handler(text="CHAT_LINK")
async def discord_func(query: CallbackQuery):
    await query.message.answer('–°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —á–∞—Ç—ã/–∫–∞–Ω–∞–ª—ã: "—Å—Å—ã–ª–∫–∏"')


@dp.callback_query_handler(text="OFF_GOOGLE")
async def off_google_func(query: CallbackQuery):
    # –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
    pass


@dp.callback_query_handler(text="OFF_DISCORD")
async def off_dicord_func(query: CallbackQuery):
    # –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
    pass


@dp.callback_query_handler(text="DELETE_CHAT")
async def delete_chat_func(query: CallbackQuery):
    # —É–¥–∞–ª–µ–Ω–∏–µ
    pass


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
